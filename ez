#!/usr/bin/env bash

if [ ! -n "$TMUX" ]; then
  echo "Not in a tmux session"
  exit
fi

RED='\033[0;31m'   # Color red
GREEN='\033[0;32m' # Color green
NC='\033[0m'       # No Color (reset)

cmd="$1"
cmds=("cp" "mv", "cd")

# check if the cmd is supported
if [[ ! "${cmds[@]}" =~ "$cmd" ]]; then
  echo "$cmd is not a valid command with tmux-ez"
  exit
fi

function echo_args() {

  for arg in "$@"; do
    echo "arg: $arg"
  done
}

get_pane_dir() {
  local pane_id="$1"
  tmux display-message -p -t "$pane_id" "#{pane_current_path}"
}

function print_safe() {

  if [[ $safe_mode == "true" ]]; then
    echo -e "${GREEN}[SAFE MODE]${NC} About to run:" "$@"
    read -p "Proceed? [y/N] " confirm

    if [[ ! "$confirm" =~ ^[Yy]$ ]]; then
      echo -e "${RED}Operation cancelled by user.${NC}"
      exit
    fi
  fi

}

#safe_mode="false" # set safe mode to false by default

function run_ez() {

  local cmd="$1"
  safe_mode="false"

  # check if safe_mode flag is included in input
  last_arg="${@: -1}"
  if [[ $last_arg == *"--safe"* ]]; then
    safe_mode="true"
  fi

  if [ "$cmd" == "cd" ]; then
    target="$2"
    pane_path="$(get_pane_dir "$target")"

    print_safe $cmd $pane_path

    tmux send-keys "cd $(printf %q "$pane_path")" C-m
    echo "[CD] $src -> $pane_path"

  elif [ "$cmd" == "cp" ]; then
    src="$2"
    target="$3"
    pane_path="$(get_pane_dir "$target")"

    print_safe $cmd $src $pane_path

    cp "$src" "$pane_path/"
    echo "[COPY] $src -> $pane_path"

  elif [ "$cmd" == "mv" ]; then
    src="$2"
    target="$3"

    print_safe $cmd $src $pane_path

    mv "$src" "$pane_path/"
    echo "[MOVE] $src -> $pane_path"

  else
    echo "Wrong command"
  fi
}

run_ez "$@"
